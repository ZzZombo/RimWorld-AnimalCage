<?xml version="1.0" encoding="utf-8"?>
<Defs>
	<ThingDef ParentName="FurnitureWithQualityBase" Name="ZzZomboRW_AnimalCage_Cage_Base" Abstract="true">
		<thingClass>ZzZomboRW.Building_Cage</thingClass>
		<rotatable>true</rotatable>
		<fillPercent>0.25</fillPercent>
		<designationCategory>Misc</designationCategory>
		<!-- <pathCost>9000</pathCost> -->
		<passability>Standable</passability>
		<canOverlapZones>false</canOverlapZones>
		<techLevel>Medieval</techLevel>
		<castEdgeShadows>true</castEdgeShadows>
		<building>
			<isSittable>true</isSittable>
			<naturalTerrain>WoodPlankFloor</naturalTerrain>
			<leaveTerrain>WoodPlankFloor</leaveTerrain>
			<bed_humanlike>false</bed_humanlike>
			<bed_maxBodySize>0.65</bed_maxBodySize>
			<bed_showSleeperBody>true</bed_showSleeperBody>
			<bed_healPerDay>4</bed_healPerDay>
			<bed_caravansCanUse>false</bed_caravansCanUse>
			<!-- <bed_defaultMedical>true</bed_defaultMedical> -->
		</building>
		<defaultPlacingRot>South</defaultPlacingRot>
		<interactionCellOffset>(0,0,-1)</interactionCellOffset>
		<hasInteractionCell>true</hasInteractionCell>
		<altitudeLayer>Building</altitudeLayer>
		<placeWorkers>
			<li>PlaceWorker_PreventInteractionSpotOverlap</li>
		</placeWorkers>
		<statBases>
			<MaxHitPoints>75</MaxHitPoints>
			<Flammability>0.6</Flammability>
			<WorkToBuild>230</WorkToBuild>
			<Mass>60</Mass>
			<BedRestEffectiveness>0.63</BedRestEffectiveness>
			<Comfort>0.2</Comfort>
			<ImmunityGainSpeedFactor>1</ImmunityGainSpeedFactor>
			<SurgerySuccessChanceFactor>1</SurgerySuccessChanceFactor>
		</statBases>
	</ThingDef>
	<ThingDef ParentName="ZzZomboRW_AnimalCage_Cage_Base">
		<defName>ZzZomboRW_AnimalCage_Cage</defName>
		<label>animal cage</label>
		<description>A small cage to keep fitting animals in. Fits smaller animals like chickens, cats, or small dogs. Animals inside are peaceful and will be cared for by colonists even if they are wild.</description>
		<graphicData>
			<!-- FIXME: update the graphic! -->
			<texPath>Things/Building/Misc/AnimalBed/AnimalSleepBox</texPath>
			<graphicClass>Graphic_Single</graphicClass>
			<damageData>
				<rect>(0.05,0.05,0.9,0.9)</rect>
				<cornerTL>Damage/Corner</cornerTL>
				<cornerTR>Damage/Corner</cornerTR>
				<cornerBL>Damage/Corner</cornerBL>
				<cornerBR>Damage/Corner</cornerBR>
			</damageData>
		</graphicData>
		<costList>
			<WoodLog>12</WoodLog>
		</costList>
		<stuffCategories>
			<li>Metallic</li>
		</stuffCategories>
		<costStuffCount>25</costStuffCount>
		<comps>
			<li Class="CompProperties_AssignableToPawn">
				<compClass>ZzZomboRW.CompAssignableToPawn_Cage</compClass>
				<drawAssignmentOverlay>false</drawAssignmentOverlay>
				<maxAssignedPawnsCount>1</maxAssignedPawnsCount>
			</li>
		</comps>
	</ThingDef>
	<ThingDef ParentName="ZzZomboRW_AnimalCage_Cage_Base">
		<defName>ZzZomboRW_AnimalCage_Cage_ThreeByThree</defName>
		<label>medium animal cage</label>
		<description>A meduim-sized cage to keep fitting animals in. Fits average animals like dogs, foxes, or monkeys. Animals inside are peaceful and will be cared for by colonists even if they are wild.</description>
		<graphicData>
			<!-- FIXME: update the graphic! -->
			<texPath>Things/Building/Misc/AnimalBed/AnimalSleepBox</texPath>
			<graphicClass>Graphic_Single</graphicClass>
			<damageData>
				<rect>(0.05,0.05,0.9,0.9)</rect>
				<cornerTL>Damage/Corner</cornerTL>
				<cornerTR>Damage/Corner</cornerTR>
				<cornerBL>Damage/Corner</cornerBL>
				<cornerBR>Damage/Corner</cornerBR>
			</damageData>
			<drawSize>(3,3)</drawSize>
		</graphicData>
		<size>(3,3)</size>
		<building>
			<bed_maxBodySize>0.9</bed_maxBodySize>
		</building>
		<interactionCellOffset>(0,0,-2)</interactionCellOffset>
		<costStuffCount>225</costStuffCount>
		<costList>
			<WoodLog>108</WoodLog>
		</costList>
		<statBases>
			<MaxHitPoints>150</MaxHitPoints>
			<Flammability>0.6</Flammability>
			<WorkToBuild>460</WorkToBuild>
			<Mass>120</Mass>
		</statBases>
		<comps>
			<li Class="CompProperties_AssignableToPawn">
				<compClass>ZzZomboRW.CompAssignableToPawn_Cage</compClass>
				<drawAssignmentOverlay>false</drawAssignmentOverlay>
				<maxAssignedPawnsCount>1</maxAssignedPawnsCount>
			</li>
		</comps>
	</ThingDef>
	<JobDef>
		<defName>ZzZomboRW_AnimalCage_Capture</defName>
		<driverClass>ZzZomboRW.JobDriver_TakeToCage</driverClass>
		<reportString>capturing TargetA.</reportString>
		<alwaysShowWeapon>false</alwaysShowWeapon>
		<makeTargetPrisoner>true</makeTargetPrisoner>
		<casualInterruptible>false</casualInterruptible>
	</JobDef>
	<WorkGiverDef>
		<defName>ZzZomboRW_AnimalCage_Capture</defName>
		<label>take downed creature to cage</label>
		<giverClass>ZzZomboRW.WorkGiver_RescueToCage</giverClass>
		<canBeDoneWhileDrafted>true</canBeDoneWhileDrafted>
		<autoTakeablePriorityDrafted>10</autoTakeablePriorityDrafted>
		<workType>Warden</workType>
		<verb>capture</verb>
		<gerund>capturing</gerund>
		<priorityInType>60</priorityInType>
		<directOrderable>true</directOrderable>
		<requiredCapacities>
			<li>Manipulation</li>
		</requiredCapacities>
	</WorkGiverDef>
	<!-- <WorkGiverDef>
		<defName>ZzZomboRW_AnimalCage_AnimalInteraction</defName>
		<label>take care of captured animals</label>
		<giverClass>WorkGiver_DoBill</giverClass>
		<workType>Handler</workType>
		<priorityInType>30</priorityInType>
		<verb>take care of</verb>
		<gerund>caring for</gerund>
		<requiredCapacities>
			<li>Manipulation</li>
		</requiredCapacities>
		<prioritizeSustains>true</prioritizeSustains>
	</WorkGiverDef> -->
	<DutyDef>
		<defName>ZzZomboRW_AnimalCage_BeingHelpCaptive</defName>
		<alwaysShowWeapon>false</alwaysShowWeapon>
		<threatDisabled>true</threatDisabled>
		<thinkNode Class="ThinkNode_Priority">
			<leaveJoinableLordIfIssuesJob>true</leaveJoinableLordIfIssuesJob>
			<subNodes>
				<li Class="ZzZomboRW.ThinkNode_ConditionalInsideCage">
					<subNodes>
						<li Class="ThinkNode_Subtree">
							<treeDef>Downed</treeDef>
						</li>
						<li Class="ThinkNode_Subtree">
							<treeDef>BurningResponse</treeDef>
						</li>
						<li Class="JobGiver_ReactToCloseMeleeThreat" />
						<li Class="ThinkNode_Subtree">
							<treeDef>MentalStateNonCritical</treeDef>
						</li>
						<li Class="ThinkNode_Tagger">
							<tagToGive>RestingForMedicalReasons</tagToGive>
							<subNodes>
								<li Class="JobGiver_PatientGoToBed" />
							</subNodes>
						</li>
						<li Class="ThinkNode_ConditionalNPCCanSelfTendNow">
							<subNodes>
								<li Class="JobGiver_SelfTend" />
							</subNodes>
						</li>
						<li Class="JobGiver_SeekSafeTemperature" />
						<li Class="JobGiver_SeekAllowedArea" />
						<li Class="ThinkNode_QueuedJob" />
						<li Class="ThinkNode_Subtree">
							<treeDef>SatisfyBasicNeeds</treeDef>
						</li>
						<li Class="ThinkNode_Tagger">
							<tagToGive>ChangingApparel</tagToGive>
							<subNodes>
								<li Class="JobGiver_PrisonerGetDressed" />
							</subNodes>
						</li>
						<li Class="JobGiver_LayEgg" />
						<li Class="ThinkNode_TraitBehaviors" />
						<li Class="ThinkNode_ChancePerHour_Constant">
							<mtbDays>60</mtbDays>
							<subNodes>
								<li Class="ThinkNode_Tagger">
									<tagToGive>SatisfyingNeeds</tagToGive>
									<subNodes>
										<li Class="JobGiver_EatRandom" />
									</subNodes>
								</li>
							</subNodes>
						</li>
						<li Class="JobGiver_WanderNearDutyLocation">
							<wanderRadius>5</wanderRadius>
						</li>
					</subNodes>
				</li>
				<!-- <li Class="ZzZomboRW.ThinkNode_ConditionalInsideCage">
					<invert>true</invert>
					<subNodes>
						<li Class="ZzZomboRW.ThinkNode_Duty">
							<dutyDef>ExitMapBestAndDefendSelf</dutyDef>
						</li>
					</subNodes>
				</li> -->
			</subNodes>
		</thinkNode>
		<constantThinkNode Class="ThinkNode_Priority">
			<subNodes>
				<li Class="ThinkNode_ConditionalCanDoConstantThinkTreeJobNow">
					<subNodes>
						<li Class="JobGiver_FleePotentialExplosion" />
						<!-- Flee enemies, tornados, meteorites, etc. -->
						<li Class="JobGiver_AnimalFlee" />
					</subNodes>
				</li>
			</subNodes>
		</constantThinkNode>
	</DutyDef>
</Defs>
